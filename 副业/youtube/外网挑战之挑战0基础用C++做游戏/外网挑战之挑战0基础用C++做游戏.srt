1
00:00:00,300 --> 00:00:01,300
C++

2
00:00:01,300 --> 00:00:05,900
C++ 是一种功能强大的语言； 它被用来
创建 Google、Photoshop 和 WindowsOS 等巨头。

3
00:00:05,900 --> 00:00:09,800
然而 C++ 很复杂，很难学，

4
00:00:09,833 --> 00:00:14,700
有很多低级概念。
即便如此，我还是想出了一个惊人的想法，在

5
00:00:14,733 --> 00:00:19,833
没有任何经验的情况下使用 C++ 制作游戏。 这
是我做过的最困难的编程

6
00:00:19,866 --> 00:00:21,900
挑战，祝我好运

7
00:00:22,900 --> 00:00:25,666
我决定使用 SFML 作为
制作游戏的框架

8
00:00:25,700 --> 00:00:31,966
SFML 是一个多媒体库，可用于
轻松执行常见任务，例如创建

9
00:00:31,966 --> 00:00:36,333
窗口 并渲染精灵
所以我很快下载了 SFML，花了大约

10
00:00:36,366 --> 00:00:39,000
2 个小时来设置一个简单的项目

11
00:00:39,000 --> 00:00:43,400
我对游戏的想法是你控制
一艘宇宙飞船，它可以左右转动。

12
00:00:43,400 --> 00:00:47,000
会有敌人的宇宙飞船
试图跟踪你，你可以操纵

13
00:00:47,033 --> 00:00:48,833
玩家让它们坠毁。

14
00:00:48,866 --> 00:00:53,900
我还希望有坠落的小行星
可以摧毁玩家和敌人。

15
00:00:53,900 --> 00:00:58,466
我首先在 piskel 中制作玩家精灵
并将其渲染到屏幕上

16
00:00:58,500 --> 00:01:03,966
玩家将不断向前移动
并使用一些三角学，我们可以控制

17
00:01:03,966 --> 00:01:06,033
宇宙飞船左右转动

18
00:01:06,033 --> 00:01:09,400
接下来我致力于为玩家制作动画
并实现它们

19
00:01:09,433 --> 00:01:10,433
动画代码有点挑剔，
因为 SFML 并不是真正为动画而设计的

20
00:01:10,433 --> 00:01:12,300
现在宇宙飞船实际上看起来像是
在飞行

21
00:01:12,300 --> 00:01:16,333
但即使有很酷的动画，游戏
看起来还是有点平淡

22
00:01:16,366 --> 00:01:18,500
所以我通过在游戏中添加阴影来解决这个问题

23
00:01:18,500 --> 00:01:22,733
好的 ，现在是座位的时间了，你知道，
就像射击之类的

24
00:01:22,766 --> 00:01:27,600
所以我制作了一些动画，并创建了一个
Projectile 类以及 ProjectileManager

25
00:01:27,600 --> 00:01:30,666
实例
我还必须创建一个 TextureManager 脚本

26
00:01:30,700 --> 00:01:35,200
来使管理精灵更容易
一些之后 代码和错误，我们终于得到了 da

27
00:01:35,200 --> 00:01:36,200
pew pew

28
00:01:36,200 --> 00:01:40,533
现在我想为宇宙飞船添加一些轨迹
，使游戏更加真实

29
00:01:40,566 --> 00:01:44,433
还​​有什么比创建
我自己的粒子系统更好的方法呢？

30
00:01:44,466 --> 00:01:49,066
*这是一个坏主意*
无论如何，实际上对系统进行编码并没有

31
00:01:49,066 --> 00:01:52,566
那么糟糕，我遇到了各种错误，但我
能够修复它们

32
00:01:52,566 --> 00:01:58,000
困难的部分是计算
轨迹的位置，涉及三角二维矩阵

33
00:01:58,033 --> 00:02:02,433
乘法
这里是 结果，看起来相当不错

34
00:02:02,466 --> 00:02:05,466
目前我们可以射击等等，但是我们没有
什么可射击的

35
00:02:05,500 --> 00:02:10,266
我制作了一些小行星精灵，一些代码，添加了
粒子系统，做了更多代码，并创建了

36
00:02:10,266 --> 00:02:13,066
AABB 碰撞
所以现在有一些小行星会随机落下 让

37
00:02:13,100 --> 00:02:16,300
我们 看看如果我们触摸一个会发生什么

38
00:02:16,300 --> 00:02:21,466
哦.. 看起来我们遇到了问题正是
在这一点上我意识到，

39
00:02:21,500 --> 00:02:25,733
这个项目的游戏玩法和范围
对于挑战来说太大和复杂了，

40
00:02:25,733 --> 00:02:29,333
我会很难接受 我不
使用游戏引擎来制作

41
00:02:29,366 --> 00:02:34,200
但这是关于制作 C++ 游戏，而不是 Unity
游戏

42
00:02:34,200 --> 00:02:38,733
所以我选择将游戏理念更改
为无尽的射击游戏，你必须

43
00:02:38,766 --> 00:02:42,966
不让任何小行星得到它
我改变了它 这样玩家就只能

44
00:02:42,966 --> 00:02:46,966
在x轴上移动，小行星
只会直接落下

45
00:02:47,000 --> 00:02:50,100
然后我添加了一些文本，以便你可以看到
你当前的分数

46
00:02:50,133 --> 00:02:53,333
分数就是你存活了多少秒

47
00:02:53,333 --> 00:02:59,166
我也实现了 屏幕环绕，因为
它使游戏更有趣

48
00:02:59,166 --> 00:03:04,200
我能够修复碰撞，现在小行星
一旦被射击就会被摧毁

49
00:03:04,200 --> 00:03:08,166
当小行星被摧毁时，它们的踪迹
也会立即被摧毁，但我

50
00:03:08,200 --> 00:03:11,733
懒得去修复这个问题
为了让游戏更加有趣，我添加了一些大

51
00:03:11,733 --> 00:03:16,566
树林。

52
00:03:16,566 --> 00:03:21,133
这些矮胖的小行星是坚不可摧的
意思，你微不足道的子弹不会摧毁

53
00:03:21,166 --> 00:03:22,166
它们。

54
00:03:22,166 --> 00:03:25,900
目前游戏还是太简单了，
所以我们需要添加一个难度曲线，

55
00:03:25,900 --> 00:03:30,066
我编写了逻辑，让小行星生成
更频繁，坠落更快，

56
00:03:30,100 --> 00:03:34,900
得分越高 你就实现了
*这么容易，拿走你这个愚蠢的石头。

57
00:03:34,900 --> 00:03:36,666
等一下。

58
00:03:36,700 --> 00:03:40,433
Fuuc- *
接下来我使用 jsfxr 为游戏制作一些声音

59
00:03:40,433 --> 00:03:44,400
并编写了一个 AudioManager
这就是听起来的样子

60
00:03:44,400 --> 00:03:56,333
由于我使用“轴对齐边界
框”碰撞检测，玩家

61
00:03:56,366 --> 00:03:59,733
通常会在真正被击中之前就早早死亡 -屏幕。

62
00:03:59,733 --> 00:04:04,500
我通过为玩家创建一个更小的隐形
精灵来充当碰撞箱来解决这个问题，

63
00:04:04,533 --> 00:04:07,800
现在玩起来感觉好多了。

64
00:04:07,800 --> 00:04:10,166
最后我们需要一些很酷的游戏音乐。

65
00:04:10,166 --> 00:04:15,166
我打开 LMMS 并做了我通常
尝试制作好的音乐

66
00:04:15,200 --> 00:04:20,200
我制作的前几首曲目非常糟糕，
但我终于能够制作出一些还算不错的东西

67
00:04:20,200 --> 00:04:27,800
游戏快完成了，我们只需要一个名字
我称之为 Astro 躲避，因为

68
00:04:27,833 --> 00:04:32,666
就像小行星一样，你必须躲避它们
所以改进了开始屏幕，所以它实际上

69
00:04:32,700 --> 00:04:35,966
看起来像一个合适的游戏，我做了更多的游戏
测试

70
00:04:35,966 --> 00:04:40,800
游戏完成了，在短短 5 天内
我可以添加更多功能，如

71
00:04:40,833 --> 00:04:45,066
高分 、金币和禁用音乐，但这已经
足够了

72
00:04:45,066 --> 00:04:46,066
# 结束语

73
00:04:46,066 --> 00:04:50,033
我创建了一个 itch.io 页面（链接在下面的描述中
），您可以在其中

74
00:04:50,066 --> 00:04:54,933
在 Windows、Linux 和 MacO 上免费下载该游戏
所以让我知道您在以下游戏中的最高分是多少

75
00:04:55,933 --> 00:05:00,433
我实际上对游戏的结果感到满意
，并且我可能会在将来继续开发最初的

76
00:05:00,466 --> 00:05:04,000
想法
它可能看起来不像，但这个

77
00:05:04,033 --> 00:05:08,600
挑战非常困难，这绝对是
我做过的最艰难的编程挑战

78
00:05:08,633 --> 00:05:09,633
。

